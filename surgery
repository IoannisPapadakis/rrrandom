################################################################################
# post-surgery recovery times in days, for seven patients who were
# randomly divided into a control group of three that received standard care, 
# and a treatment group of four that received a new kind of care
# use randomize, repeat and reject - method to test if difference is significant
# data source: https://escholarship.org/uc/item/6hb3k0nz
################################################################################

# load packages
library(ggplot2)
library(gridExtra)
library(dplyr)
library(gtools)

# patients data 
nr <- 1:7
id <- 1:7
treatment <- c(0, 0, 0, 1, 1, 1, 1)
recover <- c(22, 33, 40, 19, 22, 25, 26)
data <- data.frame(nr, id, treatment, recover)
str(data)

# makes treatment a difference?
treat_mean <- data %>% 
   group_by(treatment) %>% 
   summarize(recover_mean = mean(recover), n = n())
treat_mean

# plot 
data %>% 
   ggplot(aes(x = treatment, y = recover, fill = as.factor(treatment))) + 
   geom_dotplot(binaxis='y', stackdir='center') +
   ggtitle("recover time by treatment")

# calc differenct
diff <- treat_mean[[1,2]] - treat_mean[[2,2]]
diff

################################################################################
# repeat random (solution 1)
################################################################################

n <- 1000

result <- vector("numeric")
p_cum <- vector("numeric")

set.seed(100)
for (i in 1:n) {
   
   treatment_random <- sample(treatment, length(treatment), replace = FALSE)
   #treatment_random <- sample(c(0,1), length(treatment), replace = TRUE)
   data_new <- cbind(data, treatment_random)
   
   treat_mean <- data_new %>% 
      group_by(treatment_random) %>% 
      summarize(treat_mean = mean(recover), n = n())
   
   diff <- treat_mean[[1,2]] - treat_mean[[2,2]]
   
   result <- c(result, diff)  
   p_cum <- c(p_cum, sum(result >= 8.66) / length(result))
   
}

# probability that the result is just random
p_random <- sum(result >= 8.66) / length(result)

# result & visualisation 
data_random <- data.frame(step = seq_along(result), result, p_cum)

p1 <- data_random %>% 
   ggplot(aes(result)) + 
   geom_density(fill = "darkgrey", alpha = 0.5) +
   geom_vline(xintercept = 8.66, color = "red", alpha = 0.5) +
   ggtitle(paste0("diff = 8.66, step = ", n, ", p(random) = ", p_random))

p2 <- data_random %>% 
   ggplot(aes(step, p_cum)) +
   geom_line() +
   geom_hline(yintercept = p_random, color = "red") +
   ylab("aproximation p(random)")

grid.arrange(p1, p2, nrow = 2)

################################################################################
# all permutations of id (solution 2)
################################################################################

# all possilbe permutations of id
nr_perm <- permutations(7, 7, nr)

# check if treatment makes a difference
# for all possilbe permutations of id

result <- vector("numeric")

for (i in 1:nrow(nr_perm)) {
   
   nr_random <- id_perm[i, ]
   tmp <- cbind(data[c("treatment")], nr_random) 
   tmp
   
   data_new <- data %>% 
      select(nr, id, recover) %>% 
      inner_join(tmp, by = c("nr" = "nr_random"))
   
   treat_mean <- data_new %>% 
      group_by(treatment) %>% 
      summarize(treat_mean = mean(recover), n = n())
   
   diff <- treat_mean[[1,2]] - treat_mean[[2,2]]
   
   result <- c(result, diff)  
   
}

sum(result >= 8.66) / length(result)
